{"mappings":";MAAM,+CAAS,GAAG,CAAC,EAAC,SAAW;MACzB,6CAAO,GAAG,+CAAS,CAAC,IAAI,EAAC,OAAS;MAClC,uCAAC,GAAG,YAAY,CAAC,OAAO,EAAC,CAAG;AAClC,EAAA,0CAA4C;MACZ,6CAAnB,GAAG,IAAI,CAAC,KAAK,CAAC,uCAAC;MACtB,6CAAO,GAAG,6CAAO;;QAClB,IAAI,GAAC,CAAG;QAAC,GAAG,GAAC,qBAAuB;;;QACpC,IAAI,GAAC,CAAG;QAAC,GAAG,GAAC,yBAA2B;;;MAGvC,iDAAW,IAAI,GAAG;WACf,GAAG,CAAC,OAAO,EAAC,QAAU,OAC5B,OAAO,EAAC,OAAS,OACjB,OAAO,EAAC,IAAM,OACd,OAAO,EAAC,GAAK,OACb,OAAO,EAAC,IAAM,OACd,OAAO,aAAc,CAAA,EAAA,2CAA6C;;MAGnC,4CAAtB;IACV,EAAA,oEAAsE;IAC5B,+CAAjC,CAAC,IAAI,EAAC,aAAe,GAAE,MAAM;IACtC,6CAAO,CAAC,OAAO,EAAE,IAAI,EAAC,KAAK;cACnB,GAAG,GAAG,CAAC,EAAE,0DAEO,EAAE,IAAI,CAAC,IAAI,CAAC,kCACZ,EAAE,iDAAW,CAAC,IAAI,CAAC,GAAG,EAAE,+KAOxC,GAAG,YAAY,CAAC,6CAAO;QAC7B,GAAG,CAAC,EAAE,EAAC,KAAO;YACZ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG;;QAEtB,GAAG,CAAC,EAAE,EAAC,KAAO,IAAC,MAAQ,IAAE,CAAC;YACxB,CAAC,CAAC,eAAe,GAAE,CAAA,EAAA,YAAc;YACzB,6CAAD,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC;YACtB,4CAAM;;;;AAKZ,4CAAM;AAEN,CAAC,EAAC,UAAY,GACb,EAAE,EAAC,KAAO;QACH,GAAG,GAAG,MAAM,CAAC,MAAM,EAAC,2BAAW;QACd,GAAf,CAAC,OAAO,EAAC,IAAM,OAAI,CAAC,EACtB,GAAG,IAAG,QAAU,IAAG,GAAG;IAG1B,6CAAO,CAAC,IAAI,CACV,EAAA,4CAA8C;;QACnB,IAAtB,EAAE,iDAAW,CAAC,GAAG,EAAE,CAAC,EAAE,WAAW;QACpC,GAAG,EAAE,GAAG;;IAEZ,EAAA,mBAAqB;IACb,4CAAF;;AAEV,EAAA,sBAAwB;AACV,MAAR,CAAC,cAAc;IACnB,EAAA,+EAAiF;UACrC,MAAhC,GAAG,IAAI,CAAC,SAAS,CAAC,6CAAO;IACrC,EAAA,kCAAoC;IAC1B,EAAV,oDAA0B;IAC1B,YAAY,CAAC,OAAO,EAAC,CAAG,GAAC,MAAM","sources":["src/main.js"],"sourcesContent":["const $siteList = $('.siteList')\r\nconst $LastLi = $siteList.find('li.last')\r\nconst x = localStorage.getItem('x')\r\n// 把获取到的字符串x再变成 对象\r\nconst xObject = JSON.parse(x)\r\nconst hashMap = xObject || [\r\n    {logo:'A',url:'https://www.acfun.cn/'},\r\n    {logo:'B',url:'https://www.bilibili.com/'},\r\n]\r\n\r\nconst simplifyUrl = (url)=>{\r\n  return url.replace('https://','')\r\n  .replace('http://','')\r\n  .replace('www.','')\r\n  .replace('.cn','')\r\n  .replace('.com','')\r\n  .replace(/\\/.*/,'')   //正则表达式（删除/开头的内容）\r\n}\r\n\r\nconst render = ()=>{\r\n  //找到全部li,唯独不要最后一个li（也就是新增）删掉\r\n  $siteList.find('li:not(.last)').remove()\r\n  hashMap.forEach((node,index)=>{\r\n    const $li = $(`<li>\r\n      <div class=\"site\">\r\n        <div class=\"logo\">${node.logo}</div>\r\n        <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n        <div class=\"close\">\r\n          <svg class=\"icon\">\r\n            <use xlink:href=\"#icon-close\"></use>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </li> `).insertBefore($LastLi)\r\n    $li.on('click',()=>{\r\n      window.open(node.url)\r\n    })\r\n    $li.on('click','.close',(e)=>{\r\n      e.stopPropagation()//阻止冒泡\r\n      hashMap.splice(index,1)\r\n      render()\r\n    })\r\n})\r\n}\r\n\r\nrender()\r\n\r\n$('.addButton')\r\n.on('click',()=>{\r\n    let url = window.prompt('输入需要添加的网址')\r\n    if(url.indexOf('http')!==0){\r\n        url = 'https://' + url\r\n    }\r\n    \r\n    hashMap.push(\r\n      // logo取删除后的第一个字母并大写\r\n      {logo: simplifyUrl(url)[0].toUpperCase(),\r\n        url: url,      \r\n    })\r\n    //重新渲染hashMap\r\n    render()\r\n})\r\n// 离开页面时触发\r\nwindow.onbeforeunload = ()=>{\r\n  // localStorage只能存字符串  所以把把一个hashMap对象变成字符串\r\n  const string = JSON.stringify(hashMap)\r\n  // 存到localStorage (key随便写)\r\n  // 在本地的存储里面设置一个x 值为string \r\n  localStorage.setItem('x',string)\r\n}\r\n"],"names":[],"version":3,"file":"index.97b79c7a.js.map"}